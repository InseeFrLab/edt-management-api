# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: EDT CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK    
        uses: actions/setup-java@v3
        with:        
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '17'          
      - name: Build and analyze
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=InseeFrLab_edt-management-api -Dsonar.organization=inseefrlab -Dsonar.token=$SONAR_TOKEN
        env: 
          SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}
          
          
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up JDK    
        uses: actions/setup-java@v3      
        with:        
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '17'          
      - name: Build with Maven      
        run: mvn clean install
      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v3
        with:
          name: jar
          path: target/*.jar
          retention-days: 1

  get_version:
    needs: build
    if: |
      github.event_name == 'push'
    runs-on: ubuntu-latest
    outputs:
      version: ${{steps.version.outputs.version}}
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
      - name: Get current version
        id: version
        run: echo "version=$(mvn -f pom.xml help:evaluate -Dexpression=project.version -q -DforceStdout)" >> "$GITHUB_OUTPUT"
      - run: echo ${{steps.version.outputs.version}}

  release:
    needs: get_version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
      - uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{needs.get_version.outputs.version}}
          target_commitish: ${{ github.head_ref || github.ref }}
          name: Release ${{needs.get_version.outputs.version}}
          draft: false
          generate_release_notes: true
          prerelease: false

  docker:
    needs: get_version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
      - name: Download jar
        id: download
        uses: actions/download-artifact@v3
        with:
          name: jar
          path: target
      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            inseefrlab/edt-management-api:${{ needs.get_version.outputs.version }}
            inseefrlab/edt-management-api:latest
